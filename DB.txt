//PARA BORRAR UNA TABLA
TRUNCATE TABLE usuarios;

//para añadir nuevos elementos a una tabla
ALTER TABLE usuarios 
ADD COLUMN codigo_acceso VARCHAR(32) DEFAULT NULL AFTER rol,
ADD UNIQUE KEY (codigo_acceso);

//crear tabla usuarios
CREATE TABLE IF NOT EXISTS usuarios(
  id int(11) NOT NULL AUTO_INCREMENT,
  nombre varchar(70) NOT NULL,
  apellido varchar(70) NOT NULL,
  correo varchar(30) NOT NULL,
  usuario varchar(20) NOT NULL,
  contrasena varchar(128) NOT NULL,
  fecha_reg varchar(20) NOT NULL,
  rol ENUM('administrador','cliente', 'empleado') NOT NULL DEFAULT 'cliente',
  codigo_acceso varchar(32) DEFAULT NULL,
  cedula VARCHAR(15) NOT NULL,
  tipo_cedula ENUM('V', 'E') NOT NULL DEFAULT 'V',
  PRIMARY KEY (id),
  UNIQUE KEY (cedula),
  UNIQUE KEY (correo),
  UNIQUE KEY (usuario),
  UNIQUE KEY (codigo_acceso),
  UNIQUE INDEX idx_cedula (cedula)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;

SELECT * from usuarios 


//alteral una tabla modificanso su campo rol
ALTER TABLE usuarios MODIFY rol ENUM('admin','administrador','cliente','empleado') NOT NULL DEFAULT 'cliente';


//PARA INGRESAR NUEVOS USUARIOS CON CONTRASEÑA HASH
INSERT INTO usuarios(nombre, apellido, correo, usuario, contrasena, fecha_reg, rol) 
VALUES ('Nombre', 'Apellido', 'email@ejemplo.com', 'usuario', 
SHA2('contraseña', 512), '2023-11-15', 'empleado');

//no usado código acceso
CREATE TABLE IF NOT EXISTS codigos_acceso (
  id int(11) NOT NULL AUTO_INCREMENT,
  codigo varchar(32) NOT NULL,
  usado tinyint(1) NOT NULL DEFAULT 0,
  fecha_creacion datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  fecha_uso datetime DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY (codigo)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;


//NO USADO
INSERT INTO codigos_acceso (codigo) VALUES 
('EMP1234567890'),
('EMP0987654321'),
('EMP1122334455');

CREATE TABLE inventario (
    id INT AUTO_INCREMENT PRIMARY KEY,
    codigo VARCHAR(20) NOT NULL UNIQUE,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    categoria VARCHAR(50),
    cantidad INT NOT NULL DEFAULT 0,
    precio DECIMAL(10, 2) NOT NULL,
    unidades_existentes INT NOT NULL DEFAULT 0,
    unidades_minimas INT DEFAULT 10,
    fecha_ingreso DATE NOT NULL,
    fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    estado ENUM('activo', 'inactivo', 'agotado') DEFAULT 'activo'
);

INSERT INTO inventario 
(codigo, nombre, descripcion, categoria, cantidad, precio, unidades_existentes, unidades_minimas, fecha_ingreso, estado) 
VALUES
('CAFE-001', 'Café Capuchino', 'Café espresso con leche vaporizada y espuma', 'Bebidas', 100, 1.60, 100, 20, '2023-01-15', 'activo'),
('PAN-001', 'Pan Artesanal', 'Pan elaborado con masa madre y fermentación lenta', 'Panadería', 50, 3.60, 50, 15, '2023-01-10', 'activo'),
('POST-001', 'Torta de Chocolate', 'Torta de chocolate con relleno cremoso', 'Postres', 30, 10.10, 30, 10, '2023-01-05', 'activo');

DROP table inventario;





//esta me funciono para borrar tablas completamente
DROP TABLE IF EXISTS inventario;
DROP TABLE IF EXISTS usuarios;
DROP TABLE IF EXISTS pedidos;
DROP TABLE IF EXISTS detalles_pedido;
DROP TABLE IF EXISTS metodos_pago;

TRUNCATE TABLE usuarios;
TRUNCATE TABLE inventario;
TRUNCATE TABLE pedidos;
TRUNCATE TABLE detalles_pedido;
TRUNCATE TABLE metodos_pago;


DROP TABLE usuarios;
DROP TABLE inventario;
DROP TABLE pedidos;
DROP TABLE detalles_pedido;
DROP TABLE metodos_pago;

-- Usa WHERE 1=1 o WHERE id>0 (si tienes columna id)
-- Ejecuta esto antes de tus DELETE statements
SET SQL_SAFE_UPDATES = 0;

DELETE FROM usuarios;
DELETE FROM inventario;
DELETE FROM pedidos;
DELETE FROM detalles_pedido;
DELETE FROM metodos_pago;

SET SQL_SAFE_UPDATES = 1;

DELETE FROM usuarios WHERE 
DELETE FROM inventario WHERE
DELETE FROM pedidos WHERE
DELETE FROM detalles_pedido WHERE
DELETE FROM metodos_pago WHERE

SET FOREIGN_KEY_CHECKS = 1;




-- Tabla de pedidos
CREATE TABLE pedidos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    fecha_pedido DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    estado ENUM('pendiente', 'procesando', 'enviado', 'completado', 'cancelado') DEFAULT 'pendiente',
    subtotal DECIMAL(10, 2) NOT NULL,
    impuestos DECIMAL(10, 2) NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
    metodo_pago ENUM('tarjeta', 'transferencia', 'efectivo', 'pago_movil') NOT NULL,
    datos_pago TEXT,
    direccion_envio TEXT,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Tabla de detalles de pedido
CREATE TABLE detalles_pedido (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pedido_id INT NOT NULL,
    producto_id INT NOT NULL,
    cantidad INT NOT NULL,
    precio_unitario DECIMAL(10, 2) NOT NULL,
    subtotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (pedido_id) REFERENCES pedidos(id) ON DELETE CASCADE,
    FOREIGN KEY (producto_id) REFERENCES inventario(id) ON DELETE CASCADE
);

SELECT * from detalles_pedido 

-- Tabla de métodos de pago
CREATE TABLE metodos_pago (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    descripcion TEXT,
    activo BOOLEAN DEFAULT TRUE
);

-- Insertar métodos de pago básicos
INSERT INTO metodos_pago (nombre, descripcion) VALUES 
('Tarjeta de Crédito/Débito', 'Pago con tarjeta Visa, Mastercard, etc.'),
('Transferencia Bancaria', 'Transferencia directa desde tu banco'),
('Pago Móvil', 'Pago a través de sistemas de pago móvil'),
('Efectivo', 'Pago en efectivo al recibir el pedido');

